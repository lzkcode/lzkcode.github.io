[{"title":"Singleton_单例模式","url":"/2022/07/20/Singleton-单例模式/","content":"\n应用场景：在程序只需要有一个实例存在的时候，比如各种[MGR](https://blog.csdn.net/n88Lpo/article/details/122659661)，各种[Factory](https://blog.csdn.net/jisuanji198509/article/details/80401303)。你可以在编写代码的时候只创建一个实例，但如何保证其他人不能通过构造器new一个新的实例呢？答案是通过单例模式实现。\n\n单例的实现方式大体分为三种：饿汉式，懒汉式，枚举单例。\n\n### 1. 饿汉式\n\n类加载到内存后，就实例化一个单例，JVM会保证线程安全。这个实现方式简单实用，唯一缺点是不管用到与否，类装载时就完成实例化，可以利用**加载外部类时不会加载内部类**的特性来实现懒加载，达到了按需初始化的目的，推荐大家使用。\n\n```java\npublic class Demo{\n    private Demo(){};\n    private static class DemoHolder{\n        private final static Demo INSTANCE = new Demo();\n    }\n    public static Demo getInstance(){ return DemoHolder.INSTANCE; }\n}\n```\n\n定义一个Demo常量，并将Demo常量和Demo**构造器都声明为private私有**，只提供一个实例常量的静态访问器用于访问该实例。构造器被声明为私有则只能在类里面调用，外面无法使用构造器创建新实例。\n\n### 2. 懒汉式\n\n懒汉式lazy looding，虽然达到了按需初始化的目的，但却带来了线程不安全的问题，可以通过双重效验锁来解决线程不安全问题，但也带来了效率下降，不推荐使用。\n\n```java\npublic class Demo{\n    private static Demo INSTANCE;\n    private Demo() {};\n    public static Demo getInstance(){\n        if(INSTANCE == null){\n            synchronized (Demo.class){\n                if(INSTANCE == null){ INSTANCE = new Demo(); }\n            }\n        }\n        return INSTANCE;\n    }\n}\n```\n\n### 3. 枚举单例\n\nJava创始人之一Joshua Bloch在《Effective Java》中写了一种新的单例的实现方式，使用枚举来实现单例。不仅可以解决线程同步，还可以防止反序列化，因为枚举类没有构造器。\n\n```java\npublic enum Demo{\n    INSTANCE;\n    //使用\n    public static void main(String[] args) {\n        System.out.println(Demo.INSTANCE.hashCode());\n    }\n}\n```\n\n三种实现单例的方式介绍完毕。","tags":["单例"],"categories":["设计模式"]},{"title":"个人博客搭建指南","url":"/2022/07/19/个人博客搭建指南/","content":"\n---\n\n​\t\t经过两天的折腾，终于把个人博客搭建成了。这个个人博客使用Hexo框架搭配Github搭建而成。写这篇博客进行记录总结，可以帮助你快速搭建一个个人博客，包括解决图片上传问题，如何更改主题，如何发布文章等...\n\n### 1. 搭建博客需要的工具\n\n在开始搭建个人博客之前先准备好所需要的工具\n\n- [Node.js下载](https://nodejs.org/zh-cn/download/)\n\n- [Git下载](https://git-scm.com/downloads)\n\n安装成功并配置好环境变量后，在命令行执行以下命令开始下载Hexo\n\n```\nnpm install hexo-cli -g\n```\n\n### 2. 新建博客的仓库\n\n利用Github的仓库作为我们Hexo博客的服务器，用来存储数据文件。\n\n- 仓库名的格式必须为`github用户名.github.io`\n- 勾选 Add a README file，其他默认即可点击create新建仓库。\n\n建完仓库后新建一个文件夹作为本地仓库，在本地仓库右键选择Git Bash Here打开git的小黑窗口，键入以下命令生成.ssh文件\n\n```bash\nssh-keygen -t rsa -C \"m13750454052@163.com\"\n```\n\n字符串是创建github时的邮件地址，第一次创建直接四次回车就生成成功。生成的公钥在`C:\\Users\\User\\.ssh`目录下的`id_rsa.pub`文件中，使用公钥创建github的SSH Key，在小黑窗口键入以下命令测试是否绑定成功，yes\n\n```bash\nssh -T git@github.com\n```\n\n### 3. 生成并发布博客\n\n1. 在本地仓库的小黑窗口键入`hexo init`初始化Hexo博客，注意这步可能出现连接错误多试几遍就可以了。\n\n2. 使用`hexo s`命令启动服务，此时可以使用 http://localhost:4000/ 访问本地博客。\n\n3. 修改本地仓库中的`_config.yml`配置文件中的deploy。\n\n   ```yaml\n   deploy:\n    type: git\n    repository: https://github.com/linzk996/linzk996.github.io.git\n    branch: main\n   ```\n\n4. 安装自动部署发布工具，在本地仓库的小黑窗口中键入以下命令进行安装。\n\n   ```bash\n   npm install hexo-deployer-git --save\n   ```\n\n5. 使用`hexo g`生成博客页面，使用`hexo d`发布到远程仓库，过程中可能出现连接错误，多试几次就可以了，或者科学上网。\n\n6. 第一次发布会有一个验证操作，需要把密码换成令牌，在GitHub中找到developer settings->personal access token可生成令牌。\n\n7. 博客发布成功，访问博客地址：https://lzkcode.github.io/\n\n到此博客搭建完成，接下来开始发布文章吧！\n\n---\n\n### 4. 发布文章\n\n博客搭建完成后怎么发布文章呢？\n\n1. 在本地仓库的小黑窗口中键入以下命令创建一个post\n\n   ```bash\n   hexo new \"My New Post\"\n   ```\n\n   执行后在本地仓库的`/source/_posts`目录中会生成一个md文件，现在可以开始编写你的文章。\n\n2. 编写完成后就可以使用`hexo s`创建本地服务器，使用`hexo g`生成静态文件，使用`hexo d`部署到远程站点。\n\n到此文章已经发送成功，注意！！国内虽然不科学上网也能访问Github但网速拉跨，如果发布完没效果请给它2分钟时间...\n\n---\n\n### 5. 解决上传图片问题\n\n此时你的文章还不能插入图片，接下来给出解决方案如下\n\n1. 修改`_config.yml`文件中的`post_asset_folder : true`，这样你新建文章的时候会有一个同名文件夹用来放资源。\n\n2. `cmd`调出DOS窗口执行命令`npm i -g yarn`安装yarn用来下载`hexo-assets-image`\n\n3. 在本地仓库的小黑窗口执行以下命令进行安装\n\n   ```bash\n   1. yarn add https://github.com/CodeFalling/hexo-asset-image --save\n   ```\n\n4. 把图片放在同名文件夹里引用，`md`里引用图片用 ./文章名/图片名 （注意！！是用斜杠而不是反斜杠）\n\n   ![avatar](./个人博客搭建指南/avatar.png)\n\n到此文章就可以插入图片了，接下来学习如何修改博客主题！！！\n\n---\n\n### 6. 修改博客主题\n\n你可以到[Hexo官网](https://hexo.io/themes/)挑选自己喜欢的主题，主题里面应该有链接可以传送到主题的Github，根据里面的提示完成主题的使用。\n\n1. 将主题克隆到theme文件夹，可以使用下面的命令\n\n   ```bash\n   git clone https://github.com/liuyib/hexo-theme-stun.git themes/stun\n   ```\n\n2. 修改`_config.yml`文件中的theme为`theme：stun`就启用了该主题，可以使用`hexo clean`打扫一下仓库\n\n3. 根据主题的文档说明来配置主题样式，我这个博客使用的[主题stun的文档](https://theme-stun.github.io/docs/zh-CN/)\n\n---\n\n","tags":["blog"],"categories":["环境搭建"]}]